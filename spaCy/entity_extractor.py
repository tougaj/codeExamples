#!/usr/bin/env python

import spacy
# import uk_core_news_lg

# from spacy.lang.uk import Ukrainian

nlp = spacy.load("uk_core_news_lg")
# nlp = spacy.load("en_core_web_lg")
# nlp = spacy.load("ru_core_news_lg")

# nlp = uk_core_news_lg.load()

# ruler = nlp.add_pipe("entity_ruler", before="ner")
ruler = nlp.add_pipe("entity_ruler", config={"overwrite_ents": True})
patterns = [
    {
        "label": "LOC",
        "pattern": [
            {"ENT_TYPE": "LOC"},
            {"TEXT": "-"},
            {"ENT_TYPE": "LOC"},
        ]
    },
    {
        "label": "ORG",
        "pattern": [
            {"ENT_TYPE": "ORG"},
            {"TEXT": "-"},
            {"ENT_TYPE": "ORG"},
        ]
    },
    {
        "label": "PER",
        "pattern": [
            {"ENT_TYPE": "PER", "OP": "?"},
            {"ENT_TYPE": "PER"},
            {"TEXT": "-"},
            {"ENT_TYPE": "PER"}
        ]
    },
]
ruler.add_patterns(patterns)
doc = nlp("""–ì—Ä—É–ø–∞ —Ç–∞–∫–∏—Ö-—Å–æ–±—ñ –∫–æ–º—É–Ω–∞–ª—å–Ω–∏–∫—ñ–≤ –∑ –Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∞ –≤–∏—Ä—É—à–∏–ª–∞ –Ω–∞ –î–æ–Ω–µ—á—á–∏–Ω—É –¥–ª—è –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–∞ –æ–±–æ—Ä–æ–Ω–Ω–∏—Ö —Å–ø–æ—Ä—É–¥. –ü—Ä–æ —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤ –ø—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–∞ –í–æ–¥–æ–∫–∞–Ω–∞–ª-–°–µ—Ä–≤—ñ—Å —Ä–æ–∑–ø–∏—Ç–∞—î–º–æ –≤ –Ω–∞—à–∏—Ö –∫–æ—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—ñ–≤ –ñ–∞–Ω–Ω–∏ –î—É—Ç—á–∞–∫-–ú–∞–ª–∏–Ω–æ–≤—Å—å–∫–æ—ó —Ç–∞ –°—Ç–µ–ø–∞–Ω–∞ –ë–æ–±—Ä–æ–≤–∞.""")
# docs = nlp.pipe(['–ì—Ä—É–ø–∞ —Ç–∞–∫–∏—Ö-—Å–æ–±—ñ –∫–æ–º—É–Ω–∞–ª—å–Ω–∏–∫—ñ–≤ –∑ –Ü–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫—ñ–≤—Å—å–∫–∞ –≤–∏—Ä—É—à–∏–ª–∞ –Ω–∞ –î–æ–Ω–µ—á—á–∏–Ω—É –¥–ª—è –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–∞ –æ–±–æ—Ä–æ–Ω–Ω–∏—Ö —Å–ø–æ—Ä—É–¥. –ü—Ä–æ —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤ –ø—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤–∞ –í–æ–¥–æ–∫–∞–Ω–∞–ª-–°–µ—Ä–≤—ñ—Å —Ä–æ–∑–ø–∏—Ç–∞—î–º–æ –≤ –Ω–∞—à–∏—Ö –∫–æ—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç—ñ–≤ –ñ–∞–Ω–Ω–∏ –î—É—Ç—á–∞–∫-–ú–∞–ª–∏–Ω–æ–≤—Å—å–∫–æ—ó —Ç–∞ –°—Ç–µ–ø–∞–Ω–∞ –ë–æ–±—Ä–æ–≤–∞.'], n_process=2)
# doc = list(docs)[0]

for token in doc:
    print('üî∑', token.text, token.lemma_, token.pos_, token.dep_, token.shape_, token.is_stop,
          f'ent_type={token.ent_type_}' if token.ent_type_ else '', token.is_upper, token.is_title)
print("-------------------------")

for ent in doc.ents:
    print('üî∂', ent.text, ent.lemma_, ent.start_char, ent.end_char, ent.label_)
print("-------------------------")

unique_ents = set()
for ent in doc.ents:
    unique_ents.add(ent.lemma_)
for e in unique_ents:
    print(e)
print("-------------------------")


# merged_entities = []
# current_entity = None

# for ent in doc.ents:
#     if current_entity is None:
#         current_entity = ent
#     else:
#         # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –æ–¥–Ω–∞–∫–æ–≤–∏–π label —ñ —á–∏ –º–æ–∂–Ω–∞ –æ–±'—î–¥–Ω–∞—Ç–∏ (—Ä—ñ–∑–Ω–∏—Ü—è 0 –∞–±–æ 1)
#         if current_entity.label_ == ent.label_ and (ent.start_char - current_entity.end_char) <= 1:
#             # –û–Ω–æ–≤–ª—é—î–º–æ —Ç–µ–∫—Å—Ç, end_char –¥–ª—è –æ–±'—î–¥–Ω–∞–Ω–æ—ó —Å—É—Ç–Ω–æ—Å—Ç—ñ
#             current_entity = spacy.tokens.Span(
#                 doc, current_entity.start, ent.end, label=current_entity.label_)
#         else:
#             # –î–æ–¥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É —Å—É—Ç–Ω—ñ—Å—Ç—å —É —Å–ø–∏—Å–æ–∫
#             merged_entities.append(current_entity)
#             current_entity = ent

# # –ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–æ–¥–∞—Ç–∏ –æ—Å—Ç–∞–Ω–Ω—é —Å—É—Ç–Ω—ñ—Å—Ç—å –ø—ñ—Å–ª—è —Ü–∏–∫–ª—É
# if current_entity:
#     merged_entities.append(current_entity)

# # –í–∏–≤–æ–¥–∏–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
# for ent in merged_entities:
#     print('üî∂', ent.text, ent.lemma_, ent.start_char, ent.end_char, ent.label_)


# –ú–æ–∂–Ω–∞ —Ç–∞–∫:import spacy
# from spacy.tokens import Span

# # –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±'—î–¥–Ω–∞–Ω–Ω—è —Å—É—Ç–Ω–æ—Å—Ç–µ–π
# def merge_entities(doc):
#     merged_ents = []
#     current_ent = None

#     for ent in doc.ents:
#         if current_ent is None:
#             current_ent = ent
#         else:
#             if current_ent.label_ == ent.label_ and (ent.start_char - current_ent.end_char) <= 1:
#                 # –û–Ω–æ–≤–ª—é—î–º–æ —Å—É—Ç–Ω—ñ—Å—Ç—å
#                 current_ent = Span(doc, current_ent.start, ent.end, label=current_ent.label_)
#             else:
#                 # –î–æ–¥–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—é —Å—É—Ç–Ω—ñ—Å—Ç—å
#                 merged_ents.append(current_ent)
#                 current_ent = ent

#     # –î–æ–¥–∞—î–º–æ –æ—Å—Ç–∞–Ω–Ω—é —Å—É—Ç–Ω—ñ—Å—Ç—å
#     if current_ent:
#         merged_ents.append(current_ent)

#     # –û–Ω–æ–≤–ª—é—î–º–æ —Å—É—Ç–Ω–æ—Å—Ç—ñ –≤ –¥–æ–∫—É–º–µ–Ω—Ç—ñ
#     doc.ents = merged_ents
#     return doc

# # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –º–æ–¥–µ–ª—å SpaCy
# nlp = spacy.load("en_core_web_sm")

# # –î–æ–¥–∞—î–º–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —É pipeline
# nlp.add_pipe(merge_entities, after="ner")

# # –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è
# doc = nlp("Barack Obama was the 44th President of the United States.")
# for ent in doc.ents:
#     print(ent.text, ent.lemma_, ent.start_char, ent.end_char, ent.label_)
