#!/bin/bash
# üìã –†—ñ–∑–Ω—ñ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∑–∞–ø—É—Å–∫—É vLLM —Å–µ—Ä–≤–µ—Ä–∞

# ============================================================================
# üéØ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è 1: SPECULATIVE DECODING (—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ –¥–ª—è production)
# Gemma 12B + Gemma 4B draft
# –ü—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è: ~1.5-2.5x, –Ø–∫—ñ—Å—Ç—å: —ñ–¥–µ–Ω—Ç–∏—á–Ω–∞
# VRAM: ~32GB
# ============================================================================
start_speculative_decoding() {
    echo "üöÄ –ó–∞–ø—É—Å–∫ –∑ Speculative Decoding..."
    
    vllm serve google/gemma-2-12b-it \
        --host 0.0.0.0 \
        --port 8000 \
        --trust-remote-code \
        --max-model-len 8192 \
        --gpu-memory-utilization 0.85 \
        --speculative-model google/gemma-2-4b-it \
        --num-speculative-tokens 5 \
        --use-v2-block-manager \
        --enable-chunked-prefill \
        --enable-prefix-caching
}

# ============================================================================
# ‚ö° –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è 2: –¢–Ü–õ–¨–ö–ò TARGET MODEL (–±–µ–∑ –ø—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è)
# Gemma 12B –±–µ–∑ draft
# Baseline –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
# VRAM: ~24GB
# ============================================================================
start_baseline() {
    echo "üéØ –ó–∞–ø—É—Å–∫ baseline (–±–µ–∑ speculative decoding)..."
    
    vllm serve google/gemma-2-12b-it \
        --host 0.0.0.0 \
        --port 8000 \
        --trust-remote-code \
        --max-model-len 8192 \
        --gpu-memory-utilization 0.9 \
        --enable-prefix-caching
}

# ============================================================================
# üí® –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è 3: –¢–Ü–õ–¨–ö–ò DRAFT MODEL (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å, –º–µ–Ω—à–∞ —è–∫—ñ—Å—Ç—å)
# Gemma 4B
# –ù–∞–π—à–≤–∏–¥—à–µ, –∞–ª–µ –º–æ–∂–ª–∏–≤–∞ –≤—Ç—Ä–∞—Ç–∞ —è–∫–æ—Å—Ç—ñ
# VRAM: ~8GB
# ============================================================================
start_fast_only() {
    echo "üí® –ó–∞–ø—É—Å–∫ draft –º–æ–¥–µ–ª—ñ (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å)..."
    
    vllm serve google/gemma-2-4b-it \
        --host 0.0.0.0 \
        --port 8000 \
        --trust-remote-code \
        --max-model-len 8192 \
        --gpu-memory-utilization 0.9 \
        --enable-prefix-caching
}

# ============================================================================
# üî¨ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è 4: NGRAM PROMPT LOOKUP (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ spec decoding)
# –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î n-gram lookup –∑–∞–º—ñ—Å—Ç—å draft –º–æ–¥–µ–ª—ñ
# –ù–µ –ø–æ—Ç—Ä–µ–±—É—î –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó –º–æ–¥–µ–ª—ñ, –∞–ª–µ –º–µ–Ω—à–µ –ø—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è
# VRAM: ~24GB
# ============================================================================
start_ngram_lookup() {
    echo "üî¨ –ó–∞–ø—É—Å–∫ –∑ N-gram Prompt Lookup..."
    
    vllm serve google/gemma-2-12b-it \
        --host 0.0.0.0 \
        --port 8000 \
        --trust-remote-code \
        --max-model-len 8192 \
        --gpu-memory-utilization 0.9 \
        --ngram-prompt-lookup-max 4 \
        --ngram-prompt-lookup-min 3 \
        --enable-prefix-caching
}

# ============================================================================
# üéÆ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è 5: MULTI-GPU –∑ Speculative Decoding
# Tensor parallelism –¥–ª—è –¥—É–∂–µ –≤–µ–ª–∏–∫–∏—Ö –º–æ–¥–µ–ª–µ–π
# –ü–æ—Ç—Ä–µ–±—É—î 2+ GPU
# ============================================================================
start_multi_gpu_speculative() {
    echo "üéÆ –ó–∞–ø—É—Å–∫ –Ω–∞ multiple GPU..."
    
    vllm serve google/gemma-2-12b-it \
        --host 0.0.0.0 \
        --port 8000 \
        --trust-remote-code \
        --max-model-len 8192 \
        --tensor-parallel-size 2 \
        --gpu-memory-utilization 0.85 \
        --speculative-model google/gemma-2-4b-it \
        --num-speculative-tokens 5 \
        --use-v2-block-manager \
        --enable-chunked-prefill
}

# ============================================================================
# üîê –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è 6: PRODUCTION –∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—î—é
# –ó API key, rate limiting, logging
# ============================================================================
start_production() {
    echo "üîê –ó–∞–ø—É—Å–∫ production –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó..."
    
    # –ì–µ–Ω–µ—Ä—É–π –∞–±–æ –∑–∞–¥–∞–π —Å–≤—ñ–π API key
    API_KEY=${VLLM_API_KEY:-"your-secret-api-key-here"}
    
    vllm serve google/gemma-2-12b-it \
        --host 0.0.0.0 \
        --port 8000 \
        --trust-remote-code \
        --max-model-len 8192 \
        --gpu-memory-utilization 0.85 \
        --speculative-model google/gemma-2-4b-it \
        --num-speculative-tokens 5 \
        --use-v2-block-manager \
        --enable-chunked-prefill \
        --enable-prefix-caching \
        --api-key "$API_KEY" \
        --served-model-name gemma-12b-spec \
        --max-num-seqs 256 \
        --disable-log-requests false
}

# ============================================================================
# üß™ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è 7: –ï–ö–°–ü–ï–†–ò–ú–ï–ù–¢–ê–õ–¨–ù–ê - —Ä—ñ–∑–Ω—ñ num_speculative_tokens
# –î–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è
# ============================================================================
start_experimental() {
    NUM_SPEC_TOKENS=${1:-5}  # default 5, –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–¥–∞—Ç–∏ –∞—Ä–≥—É–º–µ–Ω—Ç
    
    echo "üß™ –ó–∞–ø—É—Å–∫ –∑ num_speculative_tokens=$NUM_SPEC_TOKENS..."
    
    vllm serve google/gemma-2-12b-it \
        --host 0.0.0.0 \
        --port 8000 \
        --trust-remote-code \
        --max-model-len 8192 \
        --gpu-memory-utilization 0.85 \
        --speculative-model google/gemma-2-4b-it \
        --num-speculative-tokens $NUM_SPEC_TOKENS \
        --use-v2-block-manager \
        --enable-chunked-prefill
}

# ============================================================================
# üéØ –ì–û–õ–û–í–ù–ï –ú–ï–ù–Æ
# ============================================================================
show_menu() {
    echo ""
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë          vLLM Server Configuration Selector                    ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo ""
    echo "–û–±–µ—Ä—ñ—Ç—å –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é:"
    echo ""
    echo "  1) üöÄ Speculative Decoding (—Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ)"
    echo "     Gemma 12B + 4B draft, ~1.5-2.5x –ø—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è"
    echo ""
    echo "  2) üéØ Baseline (–±–µ–∑ –ø—Ä–∏—Å–∫–æ—Ä–µ–Ω–Ω—è)"
    echo "     –¢—ñ–ª—å–∫–∏ Gemma 12B, –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è"
    echo ""
    echo "  3) üí® Fast Only (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å)"
    echo "     –¢—ñ–ª—å–∫–∏ Gemma 4B"
    echo ""
    echo "  4) üî¨ N-gram Lookup"
    echo "     –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ spec decoding –±–µ–∑ draft –º–æ–¥–µ–ª—ñ"
    echo ""
    echo "  5) üéÆ Multi-GPU Speculative"
    echo "     –î–ª—è —Å–∏—Å—Ç–µ–º –∑ 2+ GPU"
    echo ""
    echo "  6) üîê Production"
    echo "     –ó API key —Ç–∞ –ø–æ–≤–Ω–∏–º –ª–æ–≥—É–≤–∞–Ω–Ω—è–º"
    echo ""
    echo "  7) üß™ Experimental"
    echo "     –ö–∞—Å—Ç–æ–º–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è spec decoding"
    echo ""
    echo "  0) ‚ùå –í–∏—Ö—ñ–¥"
    echo ""
}

# ============================================================================
# MAIN
# ============================================================================
main() {
    while true; do
        show_menu
        read -p "–í–∞—à –≤–∏–±—ñ—Ä (0-7): " choice
        echo ""
        
        case $choice in
            1) start_speculative_decoding ;;
            2) start_baseline ;;
            3) start_fast_only ;;
            4) start_ngram_lookup ;;
            5) start_multi_gpu_speculative ;;
            6) start_production ;;
            7) 
                read -p "–í–≤–µ–¥—ñ—Ç—å num_speculative_tokens (3-10, —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–æ 5): " num_tokens
                start_experimental $num_tokens
                ;;
            0) 
                echo "üëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!"
                exit 0
                ;;
            *) 
                echo "‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑."
                sleep 2
                ;;
        esac
    done
}

# –ó–∞–ø—É—Å–∫ –º–µ–Ω—é
main
